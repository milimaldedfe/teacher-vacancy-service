- content_for :page_title_prefix, @organisation.name

.school.govuk-grid-row
  .govuk-grid-column-full
    %h1.govuk-heading-l{ class: 'govuk-!-margin-bottom-1' }
      = t('schools.jobs.index', organisation: @organisation.name)
    - if @multiple_organisations
      - if AuthenticationFallback.enabled?
        = link_to t('sign_in.organisation.change'), auth_email_change_organisation_path, class: 'govuk-link'
      - else
        = link_to t('sign_in.organisation.change'), auth_dfe_callback_path, class: 'govuk-link'

  .govuk-grid-column-full
    .dashboard-header
      = link_to t("buttons.create_job"), new_organisation_job_path, class: "govuk-button govuk-!-margin-bottom-0 govuk-!-margin-top-0"
    .govuk-grid-row{ class: "govuk-!-margin-top-6" }
      .govuk-grid-column-one-quarter
        = form_for 'form', url: '/url', html: { method: 'get' } do |f|
          = render partial: 'shared/filter_group', locals: { filters: { :f => f, :title => 'Filter results', :removeButtons => true, :items => [{ :options => subject_options, :title => 'Subjects', :key => 'subjects', :search => true }, { :options => working_pattern_options, :title => 'Working patterns', :key => 'working-patterns', :search => true }]}}
          = f.govuk_submit 'update filters'

      .govuk-grid-column-three-quarters
        = render(HiringStaff::VacanciesComponent.new(organisation: @organisation, sort: @sort, selected_type: @selected_type, filters: @filters))
        = render(HiringStaff::NoVacanciesComponent.new(organisation: @organisation))

      -# .govuk-grid-column-full
      -#   = render(HiringStaff::VacanciesComponent.new(organisation: @organisation, sort: @sort, selected_type: @selected_type, filters: @filters))
      -#   = render(HiringStaff::NoVacanciesComponent.new(organisation: @organisation))

  = render(HiringStaff::SchoolOverviewComponent.new(organisation: @organisation))
